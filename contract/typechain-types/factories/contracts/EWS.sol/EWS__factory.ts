/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { EWS, EWSInterface } from "../../../contracts/EWS.sol/EWS";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IDC",
        name: "_dc",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_landingPageFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_perAdditionalPageFee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "moreAllowedPages",
        type: "string[]",
      },
    ],
    name: "appendAllowedPages",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "configs",
    outputs: [
      {
        internalType: "string",
        name: "landingPage",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dc",
    outputs: [
      {
        internalType: "contract IDC",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "getAllowedPages",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getAllowedPagesSlice",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "getLandingPage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "getNumAllowedPages",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "landingPageFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "perAdditionalPageFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IDC",
        name: "_dc",
        type: "address",
      },
    ],
    name: "setDc",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_landingPageFee",
        type: "uint256",
      },
    ],
    name: "setLandingPageFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_perAdditionalPageFee",
        type: "uint256",
      },
    ],
    name: "setPerAdditionalPageFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "landingPage",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "allowedPages",
        type: "string[]",
      },
      {
        internalType: "bool",
        name: "landingPageOnly",
        type: "bool",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161155138038061155183398101604081905261002f916100b4565b61003833610064565b600280546001600160a01b0319166001600160a01b0394909416939093179092556003556004556100f7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000606084860312156100c957600080fd5b83516001600160a01b03811681146100e057600080fd5b602085015160409095015190969495509392505050565b61144b806101066000396000f3fe6080604052600436106100fe5760003560e01c806380599e4b11610095578063ce8f607811610064578063ce8f6078146102a0578063d8a531a6146102cd578063da31f44f146102ed578063e904b68b1461030d578063f2fde38b1461032057600080fd5b806380599e4b1461021b5780638da5cb5b1461023b5780638e563f751461026d578063c8e717911461028057600080fd5b80633efb0475116100d15780633efb04751461019557806359931f8a146101b5578063715018a6146101d557806374729b0d146101ea57600080fd5b8063163ed94c146101035780631bdffd9414610125578063201d2b8b1461015b57806339228a301461017f575b600080fd5b34801561010f57600080fd5b5061012361011e366004610e0c565b610340565b005b34801561013157600080fd5b50610145610140366004610e0c565b61034d565b6040516101529190610e6b565b60405180910390f35b34801561016757600080fd5b5061017160035481565b604051908152602001610152565b34801561018b57600080fd5b5061017160045481565b3480156101a157600080fd5b506101236101b0366004610e0c565b61043c565b3480156101c157600080fd5b506101456101d0366004610ecd565b610449565b3480156101e157600080fd5b506101236105aa565b3480156101f657600080fd5b50610171610205366004610e0c565b6000908152600160208190526040909120015490565b34801561022757600080fd5b50610123610236366004610fb0565b6105be565b34801561024757600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610152565b61012361027b36600461108c565b61076f565b34801561028c57600080fd5b5061012361029b366004611141565b6108f2565b3480156102ac57600080fd5b506102c06102bb366004610e0c565b61091c565b6040516101529190611165565b3480156102d957600080fd5b50600254610255906001600160a01b031681565b3480156102f957600080fd5b506102c0610308366004610e0c565b6109ba565b61012361031b366004611178565b610a5c565b34801561032c57600080fd5b5061012361033b366004611141565b610c09565b610348610c82565b600355565b606060016000838152602001908152602001600020600101805480602002602001604051908101604052809291908181526020016000905b828210156104315783829060005260206000200180546103a4906111dc565b80601f01602080910402602001604051908101604052809291908181526020018280546103d0906111dc565b801561041d5780601f106103f25761010080835404028352916020019161041d565b820191906000526020600020905b81548152906001019060200180831161040057829003601f168201915b505050505081526020019060010190610385565b505050509050919050565b610444610c82565b600455565b60606000610457848461122c565b67ffffffffffffffff81111561046f5761046f610ef9565b6040519080825280602002602001820160405280156104a257816020015b606081526020019060019003908161048d5790505b509050835b838110156105a1576000868152600160208190526040909120018054829081106104d3576104d3611245565b9060005260206000200180546104e8906111dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610514906111dc565b80156105615780601f1061053657610100808354040283529160200191610561565b820191906000526020600020905b81548152906001019060200180831161054457829003601f168201915b5050505050828683610573919061122c565b8151811061058357610583611245565b602002602001018190525080806105999061125b565b9150506104a7565b50949350505050565b6105b2610c82565b6105bc6000610cdc565b565b600254604051634907fd1360e11b815282916000916001600160a01b039091169063920ffa26906105f3908590600401611165565b602060405180830381865afa158015610610573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106349190611274565b6002546040516305457b3d60e01b81529192506000916001600160a01b03909116906305457b3d9061066a908690600401611165565b602060405180830381865afa158015610687573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ab9190611291565b90506001600160a01b03821633146106de5760405162461bcd60e51b81526004016106d5906112aa565b60405180910390fd5b4281116106fd5760405162461bcd60e51b81526004016106d5906112d9565b8351602080860191909120600081815260018352604080822081519485019091529083529091819061072f9082611355565b5061073e600182016000610d2c565b6000828152600160205260408120906107578282610d4a565b610765600183016000610d2c565b5050505050505050565b600254604051634907fd1360e11b815285916000916001600160a01b039091169063920ffa26906107a4908590600401611165565b602060405180830381865afa1580156107c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e59190611274565b6002546040516305457b3d60e01b81529192506000916001600160a01b03909116906305457b3d9061081b908690600401611165565b602060405180830381865afa158015610838573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085c9190611291565b90506001600160a01b03821633146108865760405162461bcd60e51b81526004016106d5906112aa565b4281116108a55760405162461bcd60e51b81526004016106d5906112d9565b8651602080890191909120600081815260019092526040909120806108ca8982611355565b50856108e75786516108e590600183019060208a0190610d84565b505b505050505050505050565b6108fa610c82565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600160205260009081526040902080548190610937906111dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610963906111dc565b80156109b05780601f10610985576101008083540402835291602001916109b0565b820191906000526020600020905b81548152906001019060200180831161099357829003601f168201915b5050505050905081565b60008181526001602052604090208054606091906109d7906111dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610a03906111dc565b8015610a505780601f10610a2557610100808354040283529160200191610a50565b820191906000526020600020905b815481529060010190602001808311610a3357829003601f168201915b50505050509050919050565b600254604051634907fd1360e11b815283916000916001600160a01b039091169063920ffa2690610a91908590600401611165565b602060405180830381865afa158015610aae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad29190611274565b6002546040516305457b3d60e01b81529192506000916001600160a01b03909116906305457b3d90610b08908690600401611165565b602060405180830381865afa158015610b25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b499190611291565b90506001600160a01b0382163314610b735760405162461bcd60e51b81526004016106d5906112aa565b428111610b925760405162461bcd60e51b81526004016106d5906112d9565b8451602080870191909120600081815260019092526040822090915b86518110156107655781600101878281518110610bcd57610bcd611245565b60209081029190910181015182546001810184556000938452919092200190610bf69082611355565b5080610c018161125b565b915050610bae565b610c11610c82565b6001600160a01b038116610c765760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106d5565b610c7f81610cdc565b50565b6000546001600160a01b031633146105bc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106d5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5080546000825590600052602060002090810190610c7f9190610dda565b508054610d56906111dc565b6000825580601f10610d66575050565b601f016020900490600052602060002090810190610c7f9190610df7565b828054828255906000526020600020908101928215610dca579160200282015b82811115610dca5782518290610dba9082611355565b5091602001919060010190610da4565b50610dd6929150610dda565b5090565b80821115610dd6576000610dee8282610d4a565b50600101610dda565b5b80821115610dd65760008155600101610df8565b600060208284031215610e1e57600080fd5b5035919050565b6000815180845260005b81811015610e4b57602081850181015186830182015201610e2f565b506000602082860101526020601f19601f83011685010191505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610ec057603f19888603018452610eae858351610e25565b94509285019290850190600101610e92565b5092979650505050505050565b600080600060608486031215610ee257600080fd5b505081359360208301359350604090920135919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610f3857610f38610ef9565b604052919050565b600082601f830112610f5157600080fd5b813567ffffffffffffffff811115610f6b57610f6b610ef9565b610f7e601f8201601f1916602001610f0f565b818152846020838601011115610f9357600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215610fc257600080fd5b813567ffffffffffffffff811115610fd957600080fd5b610fe584828501610f40565b949350505050565b600082601f830112610ffe57600080fd5b8135602067ffffffffffffffff8083111561101b5761101b610ef9565b8260051b61102a838201610f0f565b938452858101830193838101908886111561104457600080fd5b84880192505b85831015611080578235848111156110625760008081fd5b6110708a87838c0101610f40565b835250918401919084019061104a565b98975050505050505050565b600080600080608085870312156110a257600080fd5b843567ffffffffffffffff808211156110ba57600080fd5b6110c688838901610f40565b955060208701359150808211156110dc57600080fd5b6110e888838901610f40565b945060408701359150808211156110fe57600080fd5b5061110b87828801610fed565b9250506060850135801515811461112157600080fd5b939692955090935050565b6001600160a01b0381168114610c7f57600080fd5b60006020828403121561115357600080fd5b813561115e8161112c565b9392505050565b60208152600061115e6020830184610e25565b6000806040838503121561118b57600080fd5b823567ffffffffffffffff808211156111a357600080fd5b6111af86838701610f40565b935060208501359150808211156111c557600080fd5b506111d285828601610fed565b9150509250929050565b600181811c908216806111f057607f821691505b60208210810361121057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561123f5761123f611216565b92915050565b634e487b7160e01b600052603260045260246000fd5b60006001820161126d5761126d611216565b5060010190565b60006020828403121561128657600080fd5b815161115e8161112c565b6000602082840312156112a357600080fd5b5051919050565b60208082526015908201527422aba99d103737ba103237b6b0b4b71037bbb732b960591b604082015260600190565b6020808252601390820152721155d4ce88191bdb585a5b88195e1c1a5c9959606a1b604082015260600190565b601f82111561135057600081815260208120601f850160051c8101602086101561132d5750805b601f850160051c820191505b8181101561134c57828155600101611339565b5050505b505050565b815167ffffffffffffffff81111561136f5761136f610ef9565b6113838161137d84546111dc565b84611306565b602080601f8311600181146113b857600084156113a05750858301515b600019600386901b1c1916600185901b17855561134c565b600085815260208120601f198616915b828110156113e7578886015182559484019460019091019084016113c8565b50858210156114055787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212203d145bc2c92b2007dbc6fee42ffdfbf2d3f8366ea40770fc6c125a32077a648a64736f6c63430008110033";

type EWSConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EWSConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EWS__factory extends ContractFactory {
  constructor(...args: EWSConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _dc: PromiseOrValue<string>,
    _landingPageFee: PromiseOrValue<BigNumberish>,
    _perAdditionalPageFee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EWS> {
    return super.deploy(
      _dc,
      _landingPageFee,
      _perAdditionalPageFee,
      overrides || {}
    ) as Promise<EWS>;
  }
  override getDeployTransaction(
    _dc: PromiseOrValue<string>,
    _landingPageFee: PromiseOrValue<BigNumberish>,
    _perAdditionalPageFee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _dc,
      _landingPageFee,
      _perAdditionalPageFee,
      overrides || {}
    );
  }
  override attach(address: string): EWS {
    return super.attach(address) as EWS;
  }
  override connect(signer: Signer): EWS__factory {
    return super.connect(signer) as EWS__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EWSInterface {
    return new utils.Interface(_abi) as EWSInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): EWS {
    return new Contract(address, _abi, signerOrProvider) as EWS;
  }
}
